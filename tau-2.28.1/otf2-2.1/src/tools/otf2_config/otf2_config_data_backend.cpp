/*
 * This file is part of the Score-P software (http://www.score-p.org)
 *
 * Copyright (c) 2009-2014,
 * Technische Universitaet Dresden, Germany
 *
 * Copyright (c) 2017,
 * Forschungszentrum Juelich GmbH, Germany
 *
 * This software may be modified and distributed under the terms of
 * a BSD-style license.  See the COPYING file in the package base
 * directory for details.
 *
 */

/**
 * @file
 *
 * Implements the representation and analysis of library dependencies
 */

#include <config.h>

#include <iostream>
#include <algorithm>
#include <stdlib.h>
#include <cstring>

#include <otf2_config.hpp>

#include <otf2_config_data.hpp>

using namespace std;

/* otf2_config_library_dependencies_backend_inc.hpp is
   generated by vendor/common/build-config/generate-library-dependency.sh */
#include <otf2_config_library_dependencies_backend_inc.hpp>

otf2_config_data*
otf2_config_get_backend_data( void )
{
    static otf2_config_data data;

    data.m_cc                    = "gcc";
    data.m_cppflags              = "-I/ccs/home/ssinghal/tau2-install/2.8/gcc/ibm64linux/otf2-gcc/include";
    data.m_pythonpath            = "${prefix}/lib/python3.7/site-packages";

    string prefix("${prefix}");
    if ( equal(prefix.begin(), prefix.end(), data.m_pythonpath.begin()) )
    {
        data.m_pythonpath = std::string("/ccs/home/ssinghal/tau2-install/2.8/gcc/ibm64linux/otf2-gcc") + data.m_pythonpath.substr(prefix.size());
    }

    data.m_use_rpath_flag        = 1;
    data.m_rpath_flag_cc         = "$wl-rpath $wl$libdir";
    data.m_wl_flag               = "-Wl,";
    data.m_aix_libpath           = "";
    data.m_sys_lib_dlsearch_path = "/lib /usr/lib /opt/mellanox/hcoll/lib /opt/ibutils/lib64 /opt/ibm/spectrum_mpi/jsm_pmix/lib /opt/ibm/spectrum_mpi/lib /usr/lib64/mysql /opt/mellanox/mxm/lib /usr/lib64/libglvnd  /opt/mellanox/sharp/lib /usr/lib64 ";
    data.m_have_sionlib_support  = HAVE_BACKEND_SIONLIB_SUPPORT;

    deque<string> libs;
    deque<string> ldflags;
    deque<string> rpaths;
    deque<string> dependency_las;

    add_library_dependencies_backend( libs, ldflags, rpaths, dependency_las, &data.m_la_objects );

    data.prepare_rpath_flags();

    return &data;
}
